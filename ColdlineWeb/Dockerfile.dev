# ===== STAGE 1: build Blazor WASM =====
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# cache de restore
COPY ColdlineWeb.csproj .
RUN dotnet restore ColdlineWeb.csproj

# código
COPY . .
RUN dotnet publish ColdlineWeb.csproj -c Release -o /out /p:UseAppHost=false

# ===== STAGE 2: NGINX (ouvindo na 4080) =====
FROM nginx:alpine
RUN rm -f /etc/nginx/conf.d/default.conf

# publica os arquivos do Blazor
COPY --from=build /out/wwwroot /usr/share/nginx/html

# nginx ouvindo na 4080 (não usa 80)
RUN printf "server {\n\
  listen 4080;\n\
  server_name _;\n\
  root /usr/share/nginx/html;\n\
  index index.html;\n\
  location / {\n\
    try_files \$uri \$uri/ /index.html;\n\
  }\n\
  location ~* \\.(js|css|png|jpg|jpeg|gif|svg|ico|wasm|json)\$ {\n\
    expires 7d;\n\
    add_header Cache-Control \"public, no-transform\";\n\
  }\n\
}\n" > /etc/nginx/conf.d/blazor.conf

EXPOSE 4080
CMD ["nginx", "-g", "daemon off;"]
