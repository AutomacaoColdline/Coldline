@page "/homeAssistencia"
@layout EmptyLayout
@inject HttpClient Http

<link href="css/HomeAssitencia.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<div class="d-flex">
    <nav class="sidebar bg-primary text-white">
        <div class="sidebar-header p-3">
            <h4>Assistência</h4>
        </div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <button @onclick="ShowAcessos" class="nav-link text-white btn btn-link text-start w-100">
                    <i class="bi bi-door-open"></i>&nbsp;Acessos
                </button>
            </li>
            <li class="nav-item">
                <button @onclick="ShowClientes" class="nav-link text-white btn btn-link text-start w-100">
                    <i class="bi bi-people"></i>&nbsp;Clientes
                </button>
            </li>
            <li class="nav-item">
                <button @onclick="ShowDocumentacao" class="nav-link text-white btn btn-link text-start w-100">
                    <i class="bi bi-journal-text"></i>&nbsp;Documentação
                </button>
            </li>
        </ul>
    </nav>

    <div class="content flex-fill p-4">
        @if (activeSection == "acessos")
        {
            <h2 class="mb-4">Controle de Acesso</h2>

            <!-- Filtros -->
            <div class="card p-3 mb-4">
                <div class="row g-2">
                    <div class="col-md-2">
                        <input class="form-control" placeholder="Estado" @bind="filtro.Estado" />
                    </div>
                    <div class="col-md-2">
                        <input class="form-control" placeholder="Cidade" @bind="filtro.Cidade" />
                    </div>
                    <div class="col-md-2">
                        <input class="form-control" placeholder="Identificador" @bind="filtro.Identificador" />
                    </div>
                    <div class="col-md-3">
                        <input class="form-control" placeholder="Unidade" @bind="filtro.Unidade" />
                    </div>
                    <div class="col-md-2">
                        <input class="form-control" placeholder="Tipo Monitoramento ID" @bind="filtro.MonitoringTypeId" />
                    </div>
                    <div class="col-md-1 d-grid">
                        <button class="btn btn-success" @onclick="BuscarMonitoramentos">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Tabela -->
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Identificador</th>
                            <th>Unidade</th>
                            <th>Estado</th>
                            <th>Cidade</th>
                            <th>ANYDESK</th>
                            <th>RUSTDESK</th>
                            <th>Tipo de Monitoramento</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var acesso in monitoramentos)
                        {
                            <tr>
                                <td>@acesso.Identificador</td>
                                <td>@acesso.Unidade</td>
                                <td>@acesso.Estado</td>
                                <td>@acesso.Cidade</td>
                                <td>@acesso.IdAnydesk</td>
                                <td>@acesso.IdRustdesk</td>
                                <td>@acesso.MonitoringType?.Name</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else if (activeSection == "clientes")
        {
            <h2>Clientes</h2>
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Identificador</th>
                            <th>Unidade</th>
                            <th>IHM</th>
                            <th>CLPs</th>
                            <th>MACs</th>
                            <th>MASC</th>
                            <th>GATEWAY</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cliente in monitoramentos)
                        {
                            <tr>
                                <td>@cliente.Identificador</td>
                                <td>@cliente.Unidade</td>
                                <td>@cliente.Ihm</td>
                                <td>@string.Join(", ", cliente.Clp)</td>
                                <td>@string.Join(", ", cliente.Macs)</td>
                                <td>@cliente.Masc</td>
                                <td>@cliente.Gateway</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else if (activeSection == "documentacao")
        {
            <h2>Documentação</h2>

            @if (arquivos.Count == 0)
            {
                <p><strong>Carregando arquivos ou nenhum encontrado.</strong></p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var arquivo in arquivos)
                    {
                        <li class="list-group-item">
                            <a href="@arquivo.Url" target="_blank">@arquivo.Nome</a>
                        </li>
                    }
                </ul>
            }
        }
    </div>
</div>

@code {
    private string activeSection = "acessos";
    private List<ArquivoInfo> arquivos = new();
    private List<Monitoring> monitoramentos = new();
    private MonitoringFilter filtro = new();

    private void ShowAcessos() => activeSection = "acessos";
    private void ShowClientes() => activeSection = "clientes";

    private async Task ShowDocumentacao()
    {
        activeSection = "documentacao";
        await CarregarArquivos();
    }

    protected override async Task OnInitializedAsync()
    {
        await BuscarMonitoramentos();
    }

    private async Task BuscarMonitoramentos()
    {
        try
        {
            filtro.Page = 1;
            filtro.PageSize = 100;
            var response = await Http.PostAsJsonAsync("http://10.0.0.44:5000/api/Monitoring/filter", filtro);
            if (response.IsSuccessStatusCode)
            {
                var data = await response.Content.ReadFromJsonAsync<List<Monitoring>>();
                monitoramentos = data ?? new();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao buscar monitoramentos: {ex.Message}");
        }
    }

    private async Task CarregarArquivos()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<ArquivoInfo>>("http://10.0.0.44:5000/api/Arquivo");
            if (response != null)
                arquivos = response;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar arquivos: {ex.Message}");
        }
    }

    private class ArquivoInfo
    {
        public string Nome { get; set; } = string.Empty;
        public string Extensao { get; set; } = string.Empty;
        public string Url { get; set; } = string.Empty;
    }

    private class Monitoring
    {
        public string Id { get; set; } = string.Empty;
        public string Identificador { get; set; } = string.Empty;
        public string Unidade { get; set; } = string.Empty;
        public string Estado { get; set; } = string.Empty;
        public string Cidade { get; set; } = string.Empty;
        public string Ihm { get; set; } = string.Empty;
        public string Gateway { get; set; } = string.Empty;
        public List<string> Clp { get; set; } = new();
        public List<string> Macs { get; set; } = new();
        public string Masc { get; set; } = string.Empty;
        public string IdAnydesk { get; set; } = string.Empty;
        public string IdRustdesk { get; set; } = string.Empty;
        public string IdTeamViewer { get; set; } = string.Empty;
        public MonitoringType MonitoringType { get; set; } = new();
    }

    private class MonitoringType
    {
        public string Id { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
    }

    private class MonitoringFilter
    {
        public string? Estado { get; set; }
        public string? Cidade { get; set; }
        public string? Identificador { get; set; }
        public string? Unidade { get; set; }
        public string? MonitoringTypeId { get; set; }
        public int Page { get; set; } = 1;
        public int PageSize { get; set; } = 20;
    }
}
