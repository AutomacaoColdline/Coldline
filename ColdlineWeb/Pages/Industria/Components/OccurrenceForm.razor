@using ColdlineWeb.Models
@using ColdlineWeb.Services

@inject IndustriaService IndustriaService

@code {
    [Parameter] public EventCallback<StartOccurrenceModel> OnStartOccurrence { get; set; }
    [Parameter] public string ProcessId { get; set; } = string.Empty;
    [Parameter] public UserModel User { get; set; } = new();

    private string codeOccurrence = "";
    private string selectedPauseTypeId = "";
    private string selectedDefectId = "";
    private List<ReferenceEntity> pauseTypes = new();
    private List<ReferenceEntity> defects = new();

    protected override async Task OnInitializedAsync()
    {
        pauseTypes = await IndustriaService.GetPauseTypesAsync();
        defects = await IndustriaService.GetDefectsAsync();
    }

    private bool CanStartOccurrence =>
        !string.IsNullOrWhiteSpace(codeOccurrence) && !string.IsNullOrWhiteSpace(selectedPauseTypeId);

    private async Task HandleStartOccurrence()
    {
        if (!CanStartOccurrence) return;

        var pauseType = pauseTypes.FirstOrDefault(pt => pt.Id == selectedPauseTypeId);
        var defect = defects.FirstOrDefault(d => d.Id == selectedDefectId);

        // Garante que o ID do usuÃ¡rio Ã© o correto
        var userId = User?.Id ?? string.Empty;
        var userName = User?.Name ?? "UsuÃ¡rio Desconhecido";

        var occurrenceModel = new StartOccurrenceModel
        {
            CodeOccurrence = codeOccurrence,
            Process = new ReferenceEntity { Id = ProcessId.Trim() },
            PauseType = pauseType ?? new ReferenceEntity(),
            Defect = defect ?? new ReferenceEntity(),
            User = new ReferenceEntity
            { 
                Id = userId,
                Name = userName
            }
        };

        Console.WriteLine($"ðŸš€ Enviando para API: UsuÃ¡rio: {occurrenceModel.User.Id} - {occurrenceModel.User.Name}, Processo: {occurrenceModel.Process.Id}");

        await OnStartOccurrence.InvokeAsync(occurrenceModel);
    }
}

<div class="modal">
    <div class="modal-content">
        <h5>Registrar Nova OcorrÃªncia</h5>

        <div class="form-group">
            <label>CÃ³digo da OcorrÃªncia</label>
            <input type="text" @bind="codeOccurrence" class="form-control" />
        </div>

        <div class="form-group">
            <label>Tipo de Pausa</label>
            <select @bind="selectedPauseTypeId" class="form-control">
                <option value="">Selecione um tipo</option>
                @foreach (var type in pauseTypes)
                {
                    <option value="@type.Id">@type.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>Defeito (Opcional)</label>
            <select @bind="selectedDefectId" class="form-control">
                <option value="">Nenhum</option>
                @foreach (var defect in defects)
                {
                    <option value="@defect.Id">@defect.Name</option>
                }
            </select>
        </div>

        <button class="btn btn-primary mt-2" @onclick="HandleStartOccurrence" disabled="@(!CanStartOccurrence)">
            Registrar OcorrÃªncia
        </button>
    </div>
</div>
