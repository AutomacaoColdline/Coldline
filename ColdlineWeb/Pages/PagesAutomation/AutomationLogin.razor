@page "/automation/login"
@layout EmptyLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@using ColdlineWeb.Models
@using Microsoft.AspNetCore.Components.Web

<link rel="stylesheet" href="css/Automation/Automation.css" />

<img src="img/logofundo.png" class="background-image-login" alt="Logo Fundo" />

@if (isLoading)
{
    <div class="loader-overlay">
        <div class="loader"></div>
    </div>
}

<div class="login-container">
    <div class="login-card">
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger text-center">@errorMessage</div>
        }

        <input class="form-control text-center"
               @bind="identificationNumber"
               @bind:event="oninput"
               placeholder="Digite seu número de identificação"
               inputmode="numeric"
               pattern="\d*"
               @onkeypress="HandleKeyPress" />

        <button class="btn btn-primary w-100 mt-3" @onclick="Login">Login</button>
    </div>
</div>

@code {
    private string identificationNumber = string.Empty;
    private string? errorMessage;
    private bool isLoading = false;

    private async Task Login()
    {
        if (string.IsNullOrWhiteSpace(identificationNumber))
        {
            errorMessage = "Por favor, digite um número de identificação.";
            return;
        }

        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            // Apenas valida a existência do usuário
            var user = await Http.GetFromJsonAsync<UserModel>($"api/User/identification/{identificationNumber}");

            if (user != null)
            {
                // Redireciona para /automation com o número na query string
                Navigation.NavigateTo($"/automation?identificationNumber={identificationNumber}", replace: true);
            }
            else
            {
                errorMessage = "Usuário não encontrado.";
            }
        }
        catch (HttpRequestException)
        {
            errorMessage = "Erro na requisição. Tente novamente.";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await Login();
        }
    }
}
