@inject IJSRuntime JS
@inject HttpClient Http

<link rel="stylesheet" href="css/NumberProcessDate.css" />

<div class="filtro-container">
    <label>De: <input @bind="startDate" type="datetime-local" /></label>
    <label>Até: <input @bind="endDate" type="datetime-local" /></label>
    <label>Tipo de Gráfico:
        <select @bind="chartType">
            <option value="bar">Barra</option>
            <option value="line">Linha</option>
        </select>
    </label>
    <button @onclick="AplicarFiltro">
        <img src="img/lupa.png" alt="Buscar" class="btn-icon" />
    </button>
</div>

<div class="grafico-container">
    <canvas id="processChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="js/numberProcessDate.js"></script>

@code {
    private DateTime startDate = DateTime.Today.AddDays(-7);
    private DateTime endDate = DateTime.Today;
    private string chartType = "bar";

    public class ProcessByDateDto
    {
        public string Date { get; set; } = string.Empty;
        public int Quantity { get; set; }
    }

    public class DateRangeRequest
    {
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    }

    private async Task AplicarFiltro()
    {
        var requestData = new DateRangeRequest
        {
            StartDate = startDate,
            EndDate = endDate
        };

        var response = await Http.PostAsJsonAsync("api/Process/chart/by-date", requestData);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<List<ProcessByDateDto>>();
            if (result != null)
            {
                var labels = result.Select(p => p.Date).ToList();
                var values = result.Select(p => p.Quantity).ToList();
                await JS.InvokeVoidAsync("renderizarGraficoProcess", labels, values, chartType);
            }
        }
        else
        {
            Console.WriteLine("Erro ao buscar dados da API.");
        }
    }
}
